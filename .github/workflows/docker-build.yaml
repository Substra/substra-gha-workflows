name: Build Docker image
on:
  workflow_call:
    inputs:
      image:
        type: string
        required: true
      
      image-folder:
        type: string
        description: The image is in {{ repo }}/docker/{{ image-folder }}. Defaults to image name.
      
      force-publish:
        description: Force publishing the image
        type: boolean
      
      force-tag:
        description: Force tagging the image as this and only this
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          set -eu
          
          echo 'PUBLISH=${{ inputs.force-publish || (github.event_name == 'release' && !github.event.draft) }}' >> $GITHUB_ENV
        
          LATEST=false
          if ${{ github.event_name == 'release' && !github.event.prerelease && !github.event.draft }};then
            # find out whether it's the latest release
            LATEST_RELEASE_ID="$(
              curl -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ github.token }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              ${{ github.event.repository.url }}/releases/latest |
              jq -r '.id'
            )"
            if [ "$LATEST_RELEASE_ID" = '${{ github.event.release.id }}' ]; then
              LATEST=true
            fi
          fi
          echo "LATEST=$LATEST" >> $GITHUB_ENV
          
          echo "VERSION=${{ github.ref_name }}+$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV
          
          # default image folder to image name
          IMAGE_FOLDER='${{ inputs.image-folder }}'
          echo "DOCKERFILE_LOCATION=./docker/${IMAGE_FOLDER:-${{ inputs.image }}}/Dockerfile" >> $GITHUB_ENV
          
          echo 'ENABLE_REF_TAG=${{
            (github.event_name == 'release' && inputs.force-tag == '')
            || (github.event_name == 'push' && github.event.ref == 'refs/heads/main')
          }}' >> $GITHUB_ENV

      - name: Output environment variables for debugging
        run: |
          echo '${{ toJSON(env) }}'

      - name: Lint Dockerfile
        if: github.event_name == 'pull_request'
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ${{ env.DOCKERFILE_LOCATION }}

      - name: Login to registry
        uses: docker/login-action@v2
        if: env.PUBLISH == 'true'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker metadata
        id: docker-metadata
        uses: docker/metadata-action@v4
        with:
          images: 'ghcr.io/substra/${{ inputs.image }}'
          flavor: |
            latest=${{ env.LATEST == 'true' && inputs.force-tag == '' }}
          tags: |
            type=raw,value=${{ github.ref_name }},enable=${{ env.ENABLE_REF_TAG }}
            type=raw,value=${{ inputs.force-tag }},enable=${{ inputs.force-tag != '' }}

      - name: Build image
        uses: docker/build-push-action@v4
        with:
          push: ${{ env.PUBLISH }}
          file: ${{ env.DOCKERFILE_LOCATION }}
          context: .
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          build-args: VERSION=${{ env.VERSION }}